<!doctype html>
<html>
  <head>
    <title>List URL</title>
    <style>
      body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
      }

      footer {
        background-color: #333;
        padding: 10px 0;
        text-align: center;
        position: fixed;
        width: 100%;
        bottom: 0;
      }

      .copyright {
        color: white;
      }

      .container {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
        text-align: center;
        margin-top: 50px;
      }

      table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
      }

      th,
      td {
        border: 1px solid #ddd;
        padding: 8px;
        text-align: left;
      }

      th {
        background-color: #f2f2f2;
      }
      #deleteButton {
        background-color: red;
        color: white;
        border: none;
        border-radius: 5px;
        padding: 5px 10px;
        cursor: pointer;
      }
    </style>
  </head>

  <body>
    <%- include('partials/header') %>

    <div id="urlContainer" class="container">
      <h1>List of URLs</h1>
      <table>
        <thead>
          <tr>
            <th>Original URL</th>
            <th>Shortened URL</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody id="urlTableBody"></tbody>
      </table>
    </div>

    <footer>
      <p class="copyright">&copy; 2024 My Website</p>
    </footer>

    <script>
      function getCookie(name) {
        const cookieArr = document.cookie.split(';');
        for (let i = 0; i < cookieArr.length; i++) {
          const cookiePair = cookieArr[i].split('=');
          if (name === cookiePair[0].trim()) {
            return decodeURIComponent(cookiePair[1]);
          }
        }
        return null;
      }

      function deleteUrl(urlId) {
        const user = JSON.parse(getCookie('user'));
        fetch(`/urls/${urlId}`, {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json',
            Authorization: `Bearer ${user.accessToken}`,
          },
        })
          .then((response) => response.json())
          .then((data) => {
            if (data) {
              const urls = JSON.parse(localStorage.getItem('urls'));
              const updatedUrls = urls.filter((url) => url.urlId !== urlId);
              localStorage.setItem('urls', JSON.stringify(updatedUrls));
              alert('URL deleted successfully');
              renderUrls(updatedUrls);
            } else {
              alert('Error deleting URL');
            }
          })
          .catch((error) => console.error('Error:', error));
      }

      function renderUrls(urls) {
        const urlTableBody = document.getElementById('urlTableBody');
        urlTableBody.innerHTML = '';
        if (urls && Array.isArray(urls) && urls.length > 0) {
          urls.forEach((url) => {
            const row = document.createElement('tr');
            row.innerHTML = `
              <td><a href="${url.originalUrl}" target="_blank">${url.originalUrl}</a></td>
              <td><a href="${url.shortUrl}" target="_blank">${url.shortUrl}</a></td>
              <td><button id="deleteButton" onclick="deleteUrl(${url.urlId})">Remove</button></td>
            `;
            urlTableBody.appendChild(row);
          });
        } else {
          const row = document.createElement('tr');
          row.innerHTML = '<td colspan="3">No URLs available.</td>';
          urlTableBody.appendChild(row);
        }
      }

      document.addEventListener('DOMContentLoaded', () => {
        const urls = JSON.parse(localStorage.getItem('urls'));

        const userCookie = getCookie('user');
        if (!userCookie) {
          localStorage.removeItem('urls');
          window.location.href = '/auth/sign-in';
          return;
        }

        renderUrls(urls);
      });
    </script>
  </body>
</html>
